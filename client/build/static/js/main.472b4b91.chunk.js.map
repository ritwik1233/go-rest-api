{"version":3,"sources":["reducers/authReducers.js","reducers/messageReducers.js","reducers/commentReducers.js","reducers/index.js","actions/index.js","components/LoginComponent.js","components/RegisterComponent.js","components/Header.js","components/comments/CreateCommentComponent.js","components/comments/UpdateCommentComponent.js","components/comments/CommentsContainer.js","components/messages/UpdateMessageComponent.js","components/messages/MessageContainer.js","components/messages/CreateMessageComponent.js","pages/HomePage.js","pages/NotFound.js","index.js"],"names":["authReducer","state","currentUserToken","action","type","payload","messageReducers","messages","commentsReducer","comments","CombineReducers","combineReducers","auth","authReducers","message","getAllMessage","dispatch","axios","get","headers","then","res","data","result","catch","err","console","error","getAllComments","messageId","params","LoginComponent","props","onSubmit","e","preventDefault","loginDetails","FormData","append","target","email","value","password","handleLogin","style","marginTop","width","Grid","container","spacing","item","xs","TextField","name","fullWidth","label","variant","required","Button","color","defaultProps","RegisterComponent","registerDetails","handleRegister","Header","useDispatch","React","useState","loginModal","setLoginModal","tabValue","setTabValue","userEmail","setUserEmail","useEffect","Authorization","loginComponent","Modal","open","onClose","Paper","marginLeft","AppBar","position","Tabs","onChange","event","newValue","Tab","role","hidden","userDetails","method","url","access_token","loginUser","Toolbar","Typography","Fragment","size","onClick","log","openLoginModal","connect","CreateCommentComponent","id","commentData","comment","createComment","multiline","UpdateCommentComponet","commentDetails","updateComment","commentId","defaultValue","Comment","CommentsContainer","updateCommentId","setUpdateCommentStatus","margin","padding","length","map","ID","CreatedBy","varaint","deleteComment","CreatedDate","toString","UpdateMessageComponet","messageDetails","updateMessage","Message","MessageContainer","updateMesasgeStatus","setUpdateMessage","Card","CardContent","deleteMessage","getComments","viewComments","document","getElementById","reset","CreateMessageComponent","handleMessage","HomePage","setMessageId","_id","messageComponent","formattedDate","Date","NotFound","persistConfig","key","storage","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","reduxThunk","persistor","persistStore","ReactDOM","render","loading","exact","path","component"],"mappings":"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","file":"static/js/main.472b4b91.chunk.js","sourcesContent":["const authReducer = function (state = { currentUserToken: null }, action) {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return { ...state, currentUserToken: action.payload };\n    case \"LOGOUT_USER\":\n      return { ...state, currentUserToken: null };\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","const messageReducers = function (state = { messages: [] }, action) {\n  switch (action.type) {\n    case \"GET_ALL_MESSAGE\":\n      return { ...state, messages: action.payload };\n    default:\n      return state;\n  }\n};\nexport default messageReducers;\n","const commentsReducer = function (state = { comments: [] }, action) {\n  switch (action.type) {\n    case \"GET_ALL_COMMENTS\":\n      return { ...state, comments: action.payload };\n    default:\n      return state;\n  }\n};\nexport default commentsReducer;\n","import { combineReducers } from \"redux\";\nimport authReducers from \"./authReducers\";\nimport messageReducers from \"./messageReducers\";\nimport commentsReducer from \"./commentReducers\";\n\nconst CombineReducers = combineReducers({\n  auth: authReducers,\n  message: messageReducers,\n  comments: commentsReducer,\n});\n\nexport default CombineReducers;\n","import axios from \"axios\";\n\nexport function getAllMessage() {\n  return function (dispatch) {\n    axios\n      .get(\"/api/getAllMessage\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: \"GET_ALL_MESSAGE\",\n          payload: res.data.result,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        dispatch({\n          type: \"GET_ALL_MESSAGE\",\n          payload: [],\n        });\n      });\n  };\n}\n\nexport function getAllComments(messageId) {\n  return function (dispatch) {\n    axios\n      .get(\"/api/getComments\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        params: {\n          messageId,\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: \"GET_ALL_COMMENTS\",\n          payload: res.data.result,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        dispatch({\n          type: \"GET_ALL_COMMENTS\",\n          payload: [],\n        });\n      });\n  };\n}\n\nexport function loginUser(userDetails) {\n  return function (dispatch) {\n    axios({\n      method: \"post\",\n      url: \"/api/login\",\n      data: userDetails,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    }).then((res) => {\n      const access_token = `${res.data.auth}`;\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: access_token,\n      });\n    });\n  };\n}\n\nexport function logoutUser(currentUserToken) {\n  return function (dispatch) {\n    axios\n      .get(\"/api/logout\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: currentUserToken,\n        },\n      })\n      .then((res) => {\n        console.log(res.data.result);\n        dispatch({\n          type: \"LOGOUT_USER\",\n        });\n      })\n      .catch(() => {\n        dispatch({\n          type: \"LOGOUT_USER\",\n        });\n      });\n  };\n}\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction LoginComponent(props) {\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    let loginDetails = new FormData();\n    loginDetails.append(\"email\", e.target.email.value);\n    loginDetails.append(\"password\", e.target.password.value);\n    props.handleLogin(loginDetails);\n  };\n  return (\n    <form\n      onSubmit={handleLoginSubmit}\n      style={{ marginTop: \"10px\", width: \"inherit\" }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <TextField\n            name=\"email\"\n            fullWidth\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n          />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <TextField\n            name=\"password\"\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            required\n          />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n            Login\n          </Button>\n        </Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n    </form>\n  );\n}\n\n// type checking for props\nLoginComponent.propTypes = {\n  handleLogin: PropTypes.func,\n};\n\n// setting default props\nLoginComponent.defaultProps = {\n  handleLogin: () => {},\n};\n\nexport default LoginComponent;\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction RegisterComponent(props) {\n  const handleRegisterSubmit = (e) => {\n    e.preventDefault();\n    const registerDetails = new FormData();\n    registerDetails.append(\"email\", e.target.email.value);\n    registerDetails.append(\"password\", e.target.password.value);\n    props.handleRegister(registerDetails);\n  };\n  return (\n    <form\n      onSubmit={handleRegisterSubmit}\n      style={{ marginTop: \"10px\", width: \"inherit\" }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <TextField\n            name=\"email\"\n            fullWidth\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n          />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <TextField\n            name=\"password\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            required\n          />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n            Register\n          </Button>\n        </Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n    </form>\n  );\n}\n\n// type checking for props\nRegisterComponent.propTypes = {\n  handleRegister: PropTypes.func,\n};\n\n// setting default props\nRegisterComponent.defaultProps = {\n  handleRegister: () => {},\n};\n\nexport default RegisterComponent;\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Modal,\n  Paper,\n  Tabs,\n  Tab,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useDispatch } from \"react-redux\";\nimport { logoutUser, loginUser } from \"../actions/index\";\nimport LoginComponent from \"./LoginComponent.js\";\nimport RegisterComponent from \"./RegisterComponent.js\";\n\nfunction Header(props) {\n  const dispatch = useDispatch();\n  const [loginModal, setLoginModal] = React.useState(false);\n  const [tabValue, setTabValue] = React.useState(0);\n  const [userEmail, setUserEmail] = React.useState(null);\n\n  React.useEffect(() => {\n    axios\n      .get(\"/api/getCurrentUser\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: props.currentUserToken,\n        },\n      })\n      .then((res) => {\n        setUserEmail(res.data.result);\n      })\n      .catch(() => {\n        setUserEmail(null);\n      });\n  }, [props.currentUserToken]);\n  const handleClose = () => {\n    setLoginModal(!loginModal);\n  };\n  const handleLogin = (userDetails) => {\n    dispatch(loginUser(userDetails));\n    setLoginModal(false);\n  };\n  const handleRegister = (userDetails) => {\n    axios({\n      method: \"post\",\n      url: \"/api/register\",\n      data: userDetails,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    }).then(() => {\n      setLoginModal(false);\n    });\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const loginComponent = (\n    <Modal open={loginModal} onClose={handleClose}>\n      <Paper\n        style={{\n          marginTop: \"250px\",\n          marginLeft: \"25%\",\n          width: \"50%\",\n        }}\n      >\n        <AppBar position=\"static\">\n          <Tabs value={tabValue} onChange={handleTabChange}>\n            <Tab label=\"Login\" value={0} />\n            <Tab label=\"Register\" value={1} />\n          </Tabs>\n        </AppBar>\n        <Paper role=\"tabpanel\" hidden={tabValue !== 0}>\n          <LoginComponent handleLogin={handleLogin} />\n        </Paper>\n        <Paper role=\"tabpanel\" hidden={tabValue !== 1}>\n          <RegisterComponent handleRegister={handleRegister} />\n        </Paper>\n      </Paper>\n    </Modal>\n  );\n  return (\n    <AppBar position=\"static\" style={{ width: \"100%\" }}>\n      <Toolbar>\n        <Grid container spacing={3}>\n          <Grid item xs={12}></Grid>\n          <Grid item xs={10}>\n            <Typography variant=\"h6\">Go Demo Forum</Typography>\n          </Grid>\n\n          {!props.currentUserToken ? (\n            <Grid item xs={2}>\n              <Button\n                fullWidth\n                color=\"inherit\"\n                onClick={() => {\n                  setLoginModal(true);\n                }}\n              >\n                Login\n              </Button>\n            </Grid>\n          ) : (\n            <React.Fragment>\n              <Grid item xs={1}>\n                <Typography variant=\"caption\" style={{ marginTop: \"20px\" }}>\n                  {userEmail}\n                </Typography>\n              </Grid>\n              <Grid item xs={1}>\n                <Button\n                  fullWidth\n                  size=\"small\"\n                  color=\"inherit\"\n                  onClick={() => {\n                    dispatch(logoutUser(props.currentUserToken));\n                  }}\n                >\n                  Logout\n                </Button>\n              </Grid>\n            </React.Fragment>\n          )}\n          <Grid item xs={12}>\n            {loginComponent}\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUserToken: state.auth.currentUserToken,\n  };\n}\n// type checking for props\nHeader.propTypes = {\n  currentUserToken: PropTypes.string,\n  openLoginModal: PropTypes.func,\n};\n\n// setting default props\nHeader.defaultProps = {\n  currentUserToken: null,\n  openLoginModal: () => {},\n};\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction CreateCommentComponent(props) {\n  const createComment = (e) => {\n    e.preventDefault();\n    const commentData = new FormData();\n    commentData.append(\"comment\", e.target.comment.value);\n    props.createComment(commentData);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <form id=\"create-comment\" onSubmit={createComment}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"comment\"\n              fullWidth\n              multiline\n              label=\"Add Comment\"\n              variant=\"outlined\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n              Add Comment\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Grid>\n  );\n}\n\n// type checking for props\nCreateCommentComponent.propTypes = {\n  createComment: PropTypes.func,\n};\n\n// setting default props\nCreateCommentComponent.defaultProps = {\n  createComment: () => {},\n};\n\nexport default CreateCommentComponent;\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction UpdateCommentComponet(props) {\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    let commentDetails = new FormData();\n    commentDetails.append(\"comment\", e.target.message.value);\n    props.updateComment(commentDetails, props.commentId);\n  };\n  return (\n    <form\n      id=\"update-comment\"\n      onSubmit={handleCommentSubmit}\n      style={{ marginTop: \"10px\" }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <TextField\n            name=\"message\"\n            fullWidth\n            label=\"Message\"\n            variant=\"outlined\"\n            required\n            defaultValue={props.Comment}\n          />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n            Update Comment\n          </Button>\n        </Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n    </form>\n  );\n}\n\n// type checking for props\nUpdateCommentComponet.propTypes = {\n  commentId: PropTypes.string,\n  Comment: PropTypes.string,\n  updateComment: PropTypes.func,\n};\n\n// setting default props\nUpdateCommentComponet.defaultProps = {\n  commentId: \"\",\n  Comment: \"\",\n  updateComment: () => {},\n};\n\nexport default UpdateCommentComponet;\n","import React from \"react\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport CreateCommentComponent from \"./CreateCommentComponent\";\nimport UpdateCommentComponet from \"./UpdateCommentComponent\";\n\nfunction CommentsContainer(props) {\n  const [updateCommentId, setUpdateCommentStatus] = React.useState(null);\n\n  const createComment = (commentData) => {\n    props.createComment(commentData);\n  };\n\n  const updateComment = (commentData, commentId) => {\n    props.updateComment(commentData, commentId);\n    setUpdateCommentStatus(null);\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} style={{ margin: \"0px\", padding: \"0px\" }}>\n        {props.comments.length > 0 ? (\n          props.comments.map((comment) => {\n            return (\n              <Grid\n                container\n                spacing={3}\n                key={comment.ID}\n                style={{ margin: \"0px\", padding: \"0px\" }}\n              >\n                <Grid item xs={12} style={{ margin: \"0px\", padding: \"0px\" }}>\n                  <Grid\n                    container\n                    spacing={3}\n                    style={{ margin: \"0px\", padding: \"0px\" }}\n                  >\n                    <Grid\n                      item\n                      xs={10}\n                      style={{ margin: \"0px\", padding: \"0px\" }}\n                    >\n                      {updateCommentId !== comment.ID ? (\n                        <Typography\n                          variant=\"caption\"\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        >\n                          {comment.Comment}\n                        </Typography>\n                      ) : (\n                        <UpdateCommentComponet\n                          commentId={comment.ID}\n                          Comment={comment.Comment}\n                          updateComment={updateComment}\n                        />\n                      )}\n                    </Grid>\n                    {props.userEmail === comment.CreatedBy && (\n                      <React.Fragment>\n                        <Grid\n                          item\n                          xs={1}\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        >\n                          <Button\n                            varaint=\"contained\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={() => {\n                              props.deleteComment(comment.ID);\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={1}\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        >\n                          <Button\n                            varaint=\"contained\"\n                            color=\"primary\"\n                            size=\"small\"\n                            onClick={() => {\n                              if (updateCommentId === comment.ID) {\n                                setUpdateCommentStatus(null);\n                                return;\n                              }\n                              setUpdateCommentStatus(comment.ID);\n                            }}\n                          >\n                            Update\n                          </Button>\n                        </Grid>\n                      </React.Fragment>\n                    )}\n                    {updateCommentId !== comment.ID && (\n                      <React.Fragment>\n                        <Grid\n                          item\n                          xs={8}\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        ></Grid>\n                        <Grid\n                          item\n                          xs={4}\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        >\n                          <Typography\n                            variant=\"caption\"\n                            style={{ margin: \"0px\", padding: \"0px\" }}\n                          >\n                            {comment.CreatedBy}\n                          </Typography>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={8}\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        ></Grid>\n                        <Grid\n                          item\n                          xs={4}\n                          style={{ margin: \"0px\", padding: \"0px\" }}\n                        >\n                          <Typography\n                            variant=\"caption\"\n                            style={{ margin: \"0px\", padding: \"0px\" }}\n                          >\n                            {comment.CreatedDate.toString()}\n                          </Typography>\n                        </Grid>\n                      </React.Fragment>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            );\n          })\n        ) : (\n          <Typography variant=\"body1\">No Comments..</Typography>\n        )}\n      </Grid>\n      <Grid item xs={12}>\n        &nbsp;\n      </Grid>\n      {props.userEmail && (\n        <CreateCommentComponent createComment={createComment} />\n      )}\n    </React.Fragment>\n  );\n}\n\n// type checking for props\nCommentsContainer.propTypes = {\n  comments: PropTypes.arrayOf(Object),\n  userEmail: PropTypes.string,\n  deleteComment: PropTypes.func,\n  createComment: PropTypes.func,\n  updateComment: PropTypes.func,\n};\n\n// setting default props\nCommentsContainer.defaultProps = {\n  comments: [],\n  userEmail: null,\n  deleteComment: () => {},\n  createComment: () => {},\n  updateComment: () => {},\n};\nexport default CommentsContainer;\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction UpdateMessageComponet(props) {\n  const handleUpdateMessageSubmit = (e) => {\n    e.preventDefault();\n    let messageDetails = new FormData();\n    messageDetails.append(\"message\", e.target.message.value);\n    props.updateMessage(messageDetails);\n  };\n\n  return (\n    <form\n      id=\"update-message\"\n      onSubmit={handleUpdateMessageSubmit}\n      style={{ marginTop: \"10px\" }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            name=\"message\"\n            fullWidth\n            label=\"Message\"\n            variant=\"outlined\"\n            required\n            defaultValue={props.Message}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n            Update Message\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\n// type checking for props\nUpdateMessageComponet.propTypes = {\n  Message: PropTypes.string,\n  updateMessage: PropTypes.func,\n};\n\n// setting default props\nUpdateMessageComponet.defaultProps = {\n  Message: \"\",\n  updateMessage: () => {},\n};\n\nexport default UpdateMessageComponet;\n","import React from \"react\";\nimport { Button, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { getAllComments, getAllMessage } from \"../../actions/index\";\nimport CommentsContainer from \"../comments/CommentsContainer.js\";\nimport UpdateMessageComponet from \"./UpdateMessageComponent\";\n\nfunction MessageContainer(props) {\n  const dispatch = useDispatch();\n  const [userEmail, setUserEmail] = React.useState(null);\n  const [updateMesasgeStatus, setUpdateMessage] = React.useState(false);\n  React.useEffect(() => {\n    axios\n      .get(\"/api/getCurrentUser\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: props.currentUserToken,\n        },\n      })\n      .then((res) => {\n        setUpdateMessage(false);\n        setUserEmail(res.data.result);\n      })\n      .catch(() => {\n        setUserEmail(null);\n      });\n  }, [props.currentUserToken]);\n\n  const getComments = () => {\n    props.getComments(props.ID);\n  };\n\n  const updateMessage = (message) => {\n    axios({\n      method: \"put\",\n      url: \"api/updateMessage\",\n      data: message,\n      params: {\n        messageId: props.ID,\n      },\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: props.currentUserToken,\n      },\n    })\n      .then(() => {\n        dispatch(getAllMessage());\n        setUpdateMessage(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteMessage = () => {\n    props.deleteMessage(props.ID);\n  };\n\n  const createComment = (commentData) => {\n    commentData.append(\"messageId\", props.ID);\n    axios({\n      method: \"post\",\n      url: \"api/createComment\",\n      data: commentData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: props.currentUserToken,\n      },\n    })\n      .then(() => {\n        dispatch(getAllComments(props.ID));\n        const createComment = document.getElementById(\"create-comment\");\n        createComment.reset();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteComment = (commentId) => {\n    axios({\n      method: \"delete\",\n      url: \"api/deleteComment\",\n      params: {\n        commentId,\n      },\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: props.currentUserToken,\n      },\n    })\n      .then(() => {\n        dispatch(getAllComments(props.ID));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const updateComment = (commentData, commentId) => {\n    axios({\n      method: \"put\",\n      url: \"api/updateComment\",\n      data: commentData,\n      params: {\n        commentId: commentId,\n      },\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: props.currentUserToken,\n      },\n    })\n      .then(() => {\n        dispatch(getAllComments(props.ID));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={2}></Grid>\n      <Grid item xs={8}>\n        <Card>\n          <CardContent>\n            <Grid container spacing={0}>\n              <Grid item xs={10}>\n                {!updateMesasgeStatus ? (\n                  <Typography variant=\"body1\">{props.Message}</Typography>\n                ) : (\n                  <UpdateMessageComponet\n                    updateMessage={updateMessage}\n                    Message={props.Message}\n                  />\n                )}\n              </Grid>\n\n              {userEmail === props.CreatedBy && (\n                <React.Fragment>\n                  <Grid item xs={1}>\n                    <Button\n                      varaint=\"contained\"\n                      color=\"secondary\"\n                      size=\"small\"\n                      onClick={deleteMessage}\n                    >\n                      Delete\n                    </Button>\n                  </Grid>\n                  <Grid item xs={1}>\n                    <Button\n                      varaint=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={() => {\n                        setUpdateMessage(!updateMesasgeStatus);\n                      }}\n                    >\n                      Update\n                    </Button>\n                  </Grid>\n                </React.Fragment>\n              )}\n              <Grid item xs={8}></Grid>\n              <Grid item xs={4}>\n                <Typography variant=\"caption\">{props.CreatedBy}</Typography>\n              </Grid>\n              <Grid item xs={8}></Grid>\n              <Grid item xs={4}>\n                <Typography variant=\"caption\">\n                  {props.CreatedDate.toString()}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Button variant=\"text\" size=\"small\" onClick={getComments}>\n                  {props.viewComments ? \"Hide Comments\" : \"View Comments\"}\n                </Button>\n              </Grid>\n              {props.viewComments && (\n                <CommentsContainer\n                  comments={props.comments}\n                  userEmail={userEmail}\n                  deleteComment={deleteComment}\n                  createComment={createComment}\n                  updateComment={updateComment}\n                />\n              )}\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={2}></Grid>\n    </React.Fragment>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    comments: state.comments.comments,\n    currentUserToken: state.auth.currentUserToken,\n  };\n}\n\n// type checking for props\nMessageContainer.propTypes = {\n  ID: PropTypes.string,\n  Message: PropTypes.string,\n  CreatedBy: PropTypes.string,\n  CreatedDate: PropTypes.objectOf(Date),\n  comments: PropTypes.arrayOf(Object),\n  viewComments: PropTypes.bool,\n  currentUserToken: PropTypes.string,\n  getComments: PropTypes.func,\n  deleteMessage: PropTypes.func,\n};\n\n// setting default props\nMessageContainer.defaultProps = {\n  ID: \"\",\n  Message: \"\",\n  CreatedBy: \"\",\n  CreatedDate: null,\n  comments: [],\n  viewComments: false,\n  currentUserToken: null,\n  getComments: () => {},\n  deleteMessage: () => {},\n};\nexport default connect(mapStateToProps)(MessageContainer);\n","import React from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction CreateMessageComponent(props) {\n  const handleCreateMessageSubmit = (e) => {\n    e.preventDefault();\n    let messageDetails = new FormData();\n    messageDetails.append(\"message\", e.target.message.value);\n    props.handleMessage(messageDetails);\n  };\n\n  return (\n    <form\n      id=\"create-message\"\n      onSubmit={handleCreateMessageSubmit}\n      style={{ marginTop: \"10px\" }}\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <TextField\n            name=\"message\"\n            fullWidth\n            label=\"Message\"\n            variant=\"outlined\"\n            required\n          />\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={10}>\n          <Button color=\"primary\" type=\"submit\" fullWidth variant=\"contained\">\n            Create Message\n          </Button>\n        </Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n    </form>\n  );\n}\n\n// type checking for props\nCreateMessageComponent.propTypes = {\n  handleMessage: PropTypes.func,\n};\n\n// setting default props\nCreateMessageComponent.defaultProps = {\n  handleMessage: () => {},\n};\n\nexport default CreateMessageComponent;\n","import React from \"react\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { getAllMessage, getAllComments } from \"../actions/index\";\nimport MessageContainer from \"../components/messages/MessageContainer\";\nimport CreateMessageComponent from \"../components/messages/CreateMessageComponent\";\n\nfunction HomePage(props) {\n  const dispatch = useDispatch();\n  const [messageId, setMessageId] = React.useState(null);\n\n  React.useEffect(() => {\n    dispatch(getAllMessage());\n  }, []);\n\n  const getComments = (_id) => {\n    if (messageId === _id) {\n      setMessageId(null);\n      dispatch(getAllComments(\"\"));\n    } else {\n      setMessageId(_id);\n      dispatch(getAllComments(_id));\n    }\n  };\n\n  const handleMessage = (message) => {\n    axios({\n      method: \"post\",\n      url: \"api/createMessage\",\n      data: message,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: props.currentUserToken,\n      },\n    })\n      .then(() => {\n        dispatch(getAllMessage());\n        const createMessage = document.getElementById(\"create-message\");\n        createMessage.reset();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deleteMessage = (messageId) => {\n    axios({\n      method: \"delete\",\n      url: \"api/deleteMessage\",\n      params: {\n        messageId,\n      },\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: props.currentUserToken,\n      },\n    })\n      .then(() => {\n        dispatch(getAllMessage());\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const messageComponent = props.messages.map((message) => {\n    const formattedDate = new Date(message.CreatedDate);\n    const viewComments = message.ID === messageId;\n    return (\n      <MessageContainer\n        key={message.ID}\n        ID={message.ID}\n        Message={message.Message}\n        CreatedBy={message.CreatedBy}\n        CreatedDate={formattedDate}\n        getComments={getComments}\n        deleteMessage={deleteMessage}\n        viewComments={viewComments}\n      />\n    );\n  });\n\n  return (\n    <Grid container spacing={3}>\n      <React.Fragment>\n        <Grid item xs={2}></Grid>\n        <Grid item xs={8}>\n          {props.currentUserToken && (\n            <Paper>\n              <CreateMessageComponent handleMessage={handleMessage} />\n            </Paper>\n          )}\n        </Grid>\n        <Grid item xs={2}></Grid>\n        {messageComponent}\n      </React.Fragment>\n    </Grid>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    messages: state.message.messages,\n    currentUserToken: state.auth.currentUserToken,\n  };\n}\n\n// type checking for props\nHomePage.propTypes = {\n  messages: PropTypes.arrayOf(Object),\n  currentUserToken: PropTypes.string,\n};\n\n// setting default props\nHomePage.defaultProps = {\n  messages: [],\n  currentUserToken: null,\n};\nexport default connect(mapStateToProps)(HomePage);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction NotFound() {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Page Not Found</Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport storage from \"redux-persist/lib/storage\";\nimport { Grid } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/Header.js\";\nimport HomePage from \"./pages/HomePage.js\";\nimport NotFound from \"./pages/NotFound.js\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nlet store = createStore(persistedReducer, {}, applyMiddleware(reduxThunk));\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Header />\n          </Grid>\n          <Grid item xs={12}>\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route component={NotFound} />\n            </Switch>\n          </Grid>\n        </Grid>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}